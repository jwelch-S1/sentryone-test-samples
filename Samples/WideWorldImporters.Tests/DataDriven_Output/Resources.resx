<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="TestResource_TablesForRowCountComparison_8f85ac9f740b45b89326c911edf0fb90" type="System.Byte[], mscorlib">
    <value>
        cvx+EQMAAAAsIgEAAAAAAQV1dGYtOAEAAAKilAICAAAAAwAAAA9Db21tb25UYWJsZU5hbWUBSVN5c3Rl
        bS5TdHJpbmcsIG1zY29ybGliLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2
        MTkzNGUwODkBAAAASVN5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
        Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkZAAAADUxlZnRUYWJsZU5hbWUBSVN5c3RlbS5TdHJpbmcs
        IG1zY29ybGliLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkB
        AAAASVN5c3RlbS5TdHJpbmcsIG1zY29ybGliLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2Vu
        PWI3N2E1YzU2MTkzNGUwODkZAAAADlJpZ2h0VGFibGVOYW1lAUlTeXN0ZW0uU3RyaW5nLCBtc2Nvcmxp
        YiwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5AQAAAElTeXN0
        ZW0uU3RyaW5nLCBtc2NvcmxpYiwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
        NjE5MzRlMDg5GQAAAAH6AUNvbW1vblRhYmxlTmFtZSxMZWZ0VGFibGVOYW1lLFJpZ2h0VGFibGVOYW1l
        DQpUcmFuc2FjdGlvblR5cGUsQXBwbGljYXRpb24uVHJhbnNhY3Rpb25UeXBlcyxEaW1lbnNpb24uW1Ry
        YW5zYWN0aW9uIFR5cGVdDQpQYXltZW50TWV0aG9kLEFwcGxpY2F0aW9uLlBheW1lbnRNZXRob2RzLERp
        bWVuc2lvbi5bUGF5bWVudCBNZXRob2RdDQpTdG9ja0l0ZW1zLFtXYXJlaG91c2VdLltTdG9ja0l0ZW1z
        XSxbRGltZW5zaW9uXS5bU3RvY2sgSXRlbV0A
</value>
  </data>
  <data name="TestResource_ExpectedQuery_230795630c2d4ec59aa488b016a72657" xml:space="preserve">
    <value>SELECT
	'{{CommonTableName}}' AS TableName, 
	COUNT(*) AS RecordCount 
FROM {{LeftTableName}} </value>
  </data>
  <data name="TestResource_ActualQuery_270ed289b1ec49afba87670be1c472d4" xml:space="preserve">
    <value>SELECT 
	'{{CommonTableName}}' AS TableName, 
	COUNT(*) - 1 AS RecordCount
FROM {{RightTableName}}
WHERE GETDATE() BETWEEN [Valid From] AND [Valid To]</value>
  </data>
  <data name="TestResource_ComparisonManifest_ee6bb7410c014fc4a6a7a86387aef848" type="System.Byte[], mscorlib">
    <value>
        AgAAAAEAAAACAAAAAgAAAAAAAAAACVRhYmxlTmFtZQIAAAAAAAAAAAlUYWJsZU5hbWUBAAAAAgAAAAEA
        AAABAAAAAQAAAAALUmVjb3JkQ291bnQLUmVjb3JkQ291bnQAAAAA
</value>
  </data>
  <data name="TestResource_WideWorldImporters_41e6c71419f7453cbf0c35f50ab94707" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEAHMOdnFlZGBgYBQNriwuSc3Vc0ksSdQLLsxxzslMzSthlKquDs9MSQ3PL8pJ8cwtyC8q
        SS0qds7Py6utBQByiRWbOwAAAA==
</value>
  </data>
  <data name="TestResource_WideWorldImportersDW_9e990a18f179475e9a24eca7ef66ba76" type="System.Byte[], mscorlib">
    <value>
        H4sIAAAAAAAEAHMOdnFlZGBgYBQNriwuSc3Vc0ksSdQLLsxxzslMzSthlKmuDs9MSQ3PL8pJ8cwtyC8q
        SS0qdgl3zs/Lq60FAJVLJ6Y9AAAA
</value>
  </data>
  <data name="TestManifest_DataDriven_98221a439f314da4ac08a147228a6e8f" xml:space="preserve">
    <value>&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;TestManifest failOnServerPublishFailureExpression="True" testSuiteId="d5acb37e-d4a5-4223-aac2-4b51eecf7137" testSuiteName="DataDriven" testGroupId="98221a43-9f31-4da4-ac08-a147228a6e8f" testGroupName="DataDriven" isSingleGroupMode="True" publishUrl="http://localhost:44320"&gt;&lt;Keys&gt;&lt;Key key="TestSuiteRevision" value="9" /&gt;&lt;/Keys&gt;&lt;MethodAssociations&gt;&lt;MethodAssociation methodName="ComparisonTest" testName="Comparison Test" testUniqueId="6066c5b3-22a6-45ec-9e8a-9c55e03218d6" /&gt;&lt;/MethodAssociations&gt;&lt;/TestManifest&gt;</value>
  </data>
</root>